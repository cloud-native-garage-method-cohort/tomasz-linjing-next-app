apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: e2e-pipeline
spec:
  workspaces:
    - name: pipeline-ws1 # The name of the workspace in the Pipeline
    - name: gitops-repository
    - name: git-credentials
  params:
    - name: source-repo
      type: string
    - name: image-repo
      type: string
    - name: app-name
      type: string
    - name: app-namespace
      type: string
  tasks:
    - name: git-clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: "$(params.source-repo)"
        - name: revision
          value: main
      workspaces:
        - name: output
          workspace: pipeline-ws1
    - name: run-tests
      params: 
      - name: ARGS
        value: 
        - install-ci-test 
      workspaces:
      - name: source
        workspace: pipeline-ws1
      taskRef:
        name: npm
        kind: Task
      runAfter: 
       - git-clone
    - name: build
      taskRef:
        name: buildah
      params:
        - name: IMAGE
          value: "$(params.image-repo)"
      workspaces:
        - name: source
          workspace: pipeline-ws1
      runAfter:
        - run-tests
    - name: create-manifests
      taskRef:
        name: create-configuration
      params:
        - name: app-name
          value: "$(params.app-name)"
        - name: commit
          value: "$(tasks.build.results.IMAGE_DIGEST)"
        - name: image-repo
          value: "$(params.image-repo)"
        - name: source-repo
          value: "$(params.source-repo)"
      workspaces:
        - name: source
          workspace: pipeline-ws1
      runAfter:
        - build
    - name: deploy
      taskRef:
        name: deploy
      params:
       - name: app-namespace
         value: "$(params.app-namespace)"
       - name: manifest
         value: "$(tasks.create-manifests.results.manifest)"
      workspaces:
        - name: source
          workspace: pipeline-ws1
      runAfter:
        - create-manifests
    - name: save-configuration
      params:
        - name: manifest
          value: "$(tasks.create-manifests.results.manifest)"
        - name: app-name
          value: "$(params.app-name)"
        - name: sha
          value: "$(tasks.git-clone.results.commit)"
      runAfter:
        - deploy
      taskRef:
        name: save-configuration
      workspaces:
        - name: source
          workspace: pipeline-ws1
        - name: target
          workspace: gitops-repository
        - name: git-credentials
          workspace: git-credentials